/*
 * A Schema to demonstrate common features
 */

/*
 * Define the packet header
 */
define Packet block {
	uint32 key //this should be set when this defined block is used below
	uint16 length  //the length of the packet in words
	uint16 blocks //this is an index to the block fields section of the packet
	/* a CRC-32 for packet error detection
	 * this is computed on all words of the packet
	 * this is only necessary to check if the transport method
	 * does not have error detection mechanism
	 */
	uint32 crc
}
/* 
 * This is the top level hierarchy of a BR packet
 */
Packet brPacket(key = 0x45554c42) {
	/*
	 * Now the payload header
	 */
	define Payload block {
		uint16 key
		uint8 length //the length of the payload in 4-byte words
		uint8 blocks //this is an index to the block fields section of the packet
	}
	
	/*
	 * This is the header for an array
	 */
	define Array block {
		uint8 key //a unique identifier of this block
		uint8 length //the length of one unit of this block
		uint8 repeat //this indicates the number units of this block
		uint8 blocks //this indicates the index to the first block field of this block - the first field of base types
	}

	/* this section conveys the ID of the device
	 * this a unique identifier
	 * any payload following an ID payload is assumed only to be
	 * to or from that particular device.
	 * A device will always send an ID payload with every packet.
	 * A bus controller does not need to send an ID payload.
	 * A packet without one shall still be processed by a peripheral
	 */
	Payload idPayload(key = 0x0001) {
		uint32 id
	}
	
	/*
	 * A payload for a peripheral to convey its details to the controller.
	 * A controller requests a version payload by sending an empty one.
	 */
	Payload versionPayload(key = 0x0002) {
	
		uint32 fw //this is the version of the firmware
	
		// this defines the type of hardware (i.e. type/purpose of PCB)
		define HwDef compound {
			define HwType enum uint16 {
				UNDEFINED   = 0xffff
				SFDQ      	= 0x0000
				BLUE_SERVO	= 0x0001
				LUMEN       = 0x0002
				NUCLEO     	= 0x0003
				BLUE_ESC
			}
			HwType hwType
			define McuType enum uint8 {
				UNDEFINED = 0xff
				STM32F446 = 0x01
				STM32H563 = 0x02
				STM32H573 = 0x03
				STM32G071 = 0x04
			}
			McuType mcuType
			uint8 revision
		
		}
		HwDef hwDef //this allocates a field of the hardware definition compound type
		
	}
	/*
     * a payload for conveying ADC values
	 */
	Payload adcPayload(key = 0x0003) {
		Array values {
			float32 value
		}
	}
}

